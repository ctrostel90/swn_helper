import { HorizontalBox, ListView, SpinBox, CheckBox, Button } from "std-widgets.slint";
import { Icons } from "styling.slint";

export struct ShipListViewItem{
    ship-name:string,
    ship-hull-type:string,
    ship-class:string,
    ship-hp:int,
    ship-crew-min:int,
    ship-crew-max:int,
}

export component ShipListViewItemDelegate{
    callback  remove;
    callback edit;

    in property <string> ship-name <=> ship-name-label.text;
    in property <string> ship-hull-type <=> ship-hull-type-label.text;
    in property <string> ship-class <=> ship-class-label.text;
    in property <string> ship-hp;
    in property <string> ship-crew-min;
    in property <string> ship-crew-max;

    min-width: content-layer.min-width;
    min-height: content-layer.min-height;

    touch-area:= TouchArea{
        width: 100%;
        height: 100%;
    }

    content-layer := HorizontalBox {
        VerticalLayout {
            alignment: center;
            
            ship-name-label := Text{
                font-size: 18px;
                overflow: elide;
            }
            
            ship-hull-type-label := Text{
                font-size: 14px;
                overflow: elide;
            }
            ship-class-label := Text{
                overflow: elide;
            }
        }     
        VerticalLayout {
            alignment: center;
            width: 100px;
            ship-hp-label:= Text{
                text:"HP: " + ship-hp;
            }
            HorizontalLayout {   
                ship-crew-min-label:= Text{
                    text:"Min: " + ship-crew-min;
                }
                ship-crew-max-label:= Text{
                    text:"Max: " + ship-crew-max;
                }
            }
        }

        Button {
            text: "Edit";
            y: (parent.height - self.height) / 2;
            clicked => {
                root.edit();
            }
        }
        Button {
            y: (parent.height - self.height) / 2;
            icon: Icons.remove;
            clicked => {
                root.remove();
            }
        }
    }
}

export global ShipListAdapter{
    in-out property<[ShipListViewItem]> ships:[{
        ship-name:"Ship 1",
        ship-hull-type: "Free Merchant",
        ship-class: "Frigate",
        ship-hp: 5,
        ship-crew-min: 1,
        ship-crew-max: 6,
    },
    {
        ship-name:"Ship 2",
        ship-hull-type: "Corvette",
        ship-class: "Frigate",
        ship-hp: 15,
        ship-crew-min: 4,
        ship-crew-max: 10,
    }
];

    callback remove-ship(int);
    callback edit-ship();

    function ship(index:int) -> ShipListViewItem{
        root.ships[index]
    }
}
export component ShipListView inherits ListView {
    in property <[ShipListViewItem]> model;

    callback edit(/*index*/ int);
    callback remove(/*index*/ int);

    model: ShipListAdapter.ships;
    
    for item[index] in root.model : ShipListViewItemDelegate{
        width: root.visible-width;
        
        ship-name : item.ship-name;
        ship-hull-type : item.ship-hull-type;
        ship-class : item.ship-class;
        ship-hp: item.ship-hp;
        ship-crew-min: item.ship-crew-min;
        ship-crew-max: item.ship-crew-max;

        edit => {
            root.edit(index);
        }
        remove => {
            root.remove(index);
        }
    }
}